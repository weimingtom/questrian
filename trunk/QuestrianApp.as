/** * Questrian * Copyright (c) 2009 John Pavley, http://www.pavley.com * * Permission is hereby granted, free of charge, to any person obtaining * a copy of this software and associated documentation files (the * "Software"), to deal in the Software without restriction, including * without limitation the rights to use, copy, modify, merge, publish, * distribute, sublicense, and/or sell copies of the Software, and to * permit persons to whom the Software is furnished to do so, subject to * the following conditions: * The above copyright notice and this permission notice shall be * included in all copies or substantial portions of the Software. * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */package {	import flash.display.*;	import flash.events.*;	import com.questrian.*;	/*	A QuestrianApp contains all the game frames.	*/	public class QuestrianApp extends Sprite {		// Model		private var monsterMac:StateMachine;		private var tankMac:StateMachine;		private var dpsMac:StateMachine;		private var healsMac:StateMachine;		// View		private var monsterFrame:CharacterView;		private var tankFrame:CharacterView;		private var dpsFrame:CharacterView;		private var healsFrame:CharacterView;		// Controler		private var questEngine:GameEngine;		//private var logFrame:LogFrame;		//private var tauntFrame:CommandFrame;		//private var strikeFrame:CommandFrame;		//private var curseFrame:CommandFrame;		//private var healFrame:CommandFrame;		//private var blessFrame:CommandFrame;		//private var monsterUnit:UnitFrame;		//private var tankUnit:UnitFrame;		//private var dpsUnit:UnitFrame;		//private var healsUnit:UnitFrame;		//private var currentMap:MapFrame;		public function QuestrianApp():void {			trace("QuestrianApp()");			this.createModel();			this.createView();			this.createControler();						super();		}		internal function createModel():void {			this.monsterMac=new StateMachine(1);			this.monsterMac.putValueByKey("name", "Monster: Vile Trigg");			this.monsterMac.putValueByKey("faction", "foe");						this.tankMac=new StateMachine(2);			this.tankMac.putValueByKey("name", "Tank: Sir Roberts");			this.tankMac.putValueByKey("faction", "friend");						this.dpsMac=new StateMachine(3);			this.dpsMac.putValueByKey("name", "DPS: Mangus Annie");			this.dpsMac.putValueByKey("faction", "friend");						this.healsMac=new StateMachine(4);			this.healsMac.putValueByKey("name", "Heals: Father Dark");			this.healsMac.putValueByKey("faction", "friend");					}		internal function createView():void {			trace("QuestrianApp:createView()");			this.monsterFrame=new CharacterView(this.monsterMac, 128, 64);			this.monsterFrame.x = 352;			this.monsterFrame.y = 0;			this.monsterFrame.width = 128;			this.monsterFrame.height = 64;			addChild(this.monsterFrame);			this.tankFrame=new CharacterView(this.tankMac, 128, 64);			this.tankFrame.x = 0;			this.tankFrame.y = 0;			this.tankFrame.width = 128;			this.tankFrame.height = 64;			addChild(this.tankFrame);			this.dpsFrame=new CharacterView(this.dpsMac, 128, 64);			this.dpsFrame.x = 0;			this.dpsFrame.y = 64;			this.dpsFrame.width = 128;			this.dpsFrame.height = 64;			addChild(this.dpsFrame);			this.healsFrame=new CharacterView(this.healsMac, 128, 64);			this.healsFrame.x = 0;			this.healsFrame.y = 128;			this.healsFrame.width = 128;			this.healsFrame.height = 64;			addChild(this.healsFrame);		}		internal function createControler():void {			trace("QuestrianApp:createControler()");			this.questEngine = new GameEngine();		}	}// end class}// end package